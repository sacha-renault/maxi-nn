# type: ignore
import sys
from typing import Literal, List, Any, Optional, Tuple, Dict, Callable
import numpy as np
import enum
import numpy
from .tensor import Tensor_float

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  AUTOGENERATED CODE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# <litgen_stub> // Autogenerated code below! Do not edit!
####################    <generated_from:LayerFcc.hpp>    ####################

#  ------------------------------------------------------------------------
#      <template specializations for class Fcc>
class Fcc_float:  # Python specialization for Fcc<float>
    @overload
    def __init__(self, num_input: int, num_output: int) -> None:
        pass

    @overload
    def __init__(
        self,
        num_input: int,
        num_output: int,
        activation: Callable[[Tensor_float], Tensor_float]
        ) -> None:
        pass

    def __call__(self, input: Tensor_float) -> Tensor_float:
        pass

    def get_weights(self) -> Tensor_float:
        pass

    def get_bias(self) -> Tensor_float:
        pass
#      </template specializations for class Fcc>
#  ------------------------------------------------------------------------



####################    </generated_from:LayerFcc.hpp>    ####################

# </litgen_stub> // Autogenerated code end!